<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NotSoTechnical (Posts about googlesheets)</title><link>https://hrmJ.github.io/blog/</link><description></description><atom:link href="https://hrmJ.github.io/blog/categories/googlesheets.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2018 &lt;a href="mailto:juho.harme@gmail.com"&gt;Juho Härme&lt;/a&gt; </copyright><lastBuildDate>Wed, 30 May 2018 05:27:32 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Annotating random samples part 2</title><link>https://hrmJ.github.io/blog/posts/annotating-random-samples-part-2/</link><dc:creator>Juho Härme</dc:creator><description>&lt;div&gt;&lt;p&gt;Just a quick follow-up on the previous post about manually annotating random
samples. Yesterday I was facing a situation where I had to go and find some
broader contexts for concordances fetched from a corpus of Finnish newspaper
texts. These corpora don't allow access for more than a sentence, maximum
a paragraph at a time, and I needed to look at whole texts. Luckily, I figured
out that the city library has access to the electronic archives of many of the
newspapers included in the corpus.&lt;/p&gt;
&lt;p&gt;So, I had a sample of 60 concordances I needed to get the full text for. The
access to the full texts was provided only through the computers physically
located in the library --  this meant that  I, sadly, didn't have the
possibility of working with just R all the time. The easiest solution I came up with 
was to quickly upload my data set to a Google sheet and then open that sheet 
in the browser of the PC at the library. Fortunately, there is the nice
&lt;a href="https://github.com/jennybc/googlesheets"&gt;googlesheets&lt;/a&gt; library that makes this easy.
All I had to do, was:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;devtools&lt;span class="o"&gt;::&lt;/span&gt;install_github&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"jennybc/googlesheets"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;googlesheets&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Then I converted an existing data frame (well, a tibble, actually), to a Google sheet by just:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;samp_gsheet &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; gs_new&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"samp_press_fi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;input&lt;span class="o"&gt;=&lt;/span&gt;samp_press_fi&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;...where &lt;code&gt;samp_press_fi&lt;/code&gt; was the name of my tibble including the samples
I wanted to get the contexts for. The command first takes you to Google
authorization page, after which you're good to go. The nice thing about 
googlesheets is, that after I got the contexts I needed, the data was automatically 
updated in R by just, for instance:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; samp_gsheet &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; gs_read
Accessing worksheet titled &lt;span class="s"&gt;'Sheet1'&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;
Downloading&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8.2&lt;/span&gt; kB     Parsed with column specification&lt;span class="o"&gt;:&lt;/span&gt;
cols&lt;span class="p"&gt;(&lt;/span&gt;
  sent &lt;span class="o"&gt;=&lt;/span&gt; col_character&lt;span class="p"&gt;(),&lt;/span&gt;
  sourcetext &lt;span class="o"&gt;=&lt;/span&gt; col_character&lt;span class="p"&gt;(),&lt;/span&gt;
  location3 &lt;span class="o"&gt;=&lt;/span&gt; col_character&lt;span class="p"&gt;(),&lt;/span&gt;
  group &lt;span class="o"&gt;=&lt;/span&gt; col_character&lt;span class="p"&gt;(),&lt;/span&gt;
  context &lt;span class="o"&gt;=&lt;/span&gt; col_character&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>googlesheets</category><category>r</category><category>sampling</category><guid>https://hrmJ.github.io/blog/posts/annotating-random-samples-part-2/</guid><pubDate>Wed, 30 May 2018 05:25:08 GMT</pubDate></item></channel></rss>